set(FFTW_USE_STATIC_LIBS ON)
find_package(FFTW REQUIRED)

include_directories("${CMAKE_CURRENT_LIST_DIR}/src")
include_directories("${FFTW_INCLUDES}")

set(SWH_PLUGINS
  imp_1199
  mbeq_1197
  pitch_scale_1193
  pitch_scale_1194
  hermes_filter_1200
  sc1_1425
  sc2_1426
  sc3_1427
  sc4_1882
  sc4m_1916
  se4_1883
  sifter_1210
  vocoder_1337
  notch_iir_1894
  alias_1407
  allpass_1895
  am_pitchshift_1433
  amp_1181
  analogue_osc_1416
  bandpass_a_iir_1893
  bandpass_iir_1892
  bode_shifter_1431
  bode_shifter_cv_1432
  butterworth_1902
  chebstortion_1430
  comb_1190
  comb_1887
  comb_splitter_1411
  const_1909
  crossover_dist_1404
  dc_remove_1207
  decay_1886
  decimator_1202
  declip_1195
  delay_1898
  delayorama_1402
  diode_1185
  divider_1186
  dj_eq_1901
  dj_flanger_1438
  dyson_compress_1403
  fad_delay_1192
  fast_lookahead_limiter_1913
  flanger_1191
  fm_osc_1415
  foldover_1213
  foverdrive_1196
  freq_tracker_1418
  gate_1410
  giant_flange_1437
  gong_1424
  gong_beater_1439
  gsm_1215
  gverb_1216
  hard_limiter_1413
  harmonic_gen_1220
  highpass_iir_1890
  hilbert_1440
  impulse_1885
  inv_1429
  karaoke_1409
  latency_1914
  lcr_delay_1436
  lowpass_iir_1891
  ls_filter_1908
  matrix_ms_st_1421
  matrix_spatialiser_1422
  matrix_st_ms_1420
  mod_delay_1419
  multivoice_chorus_1201
  phasers_1217
  plate_1423
  pointer_cast_1910
  rate_shifter_1417
  retro_flange_1208
  revdelay_1605
  ringmod_1188
  satan_maximiser_1408
  shaper_1187
  sin_cos_1881
  single_para_1203
  sinus_wavewrapper_1198
  smooth_decimate_1414
  split_1406
  step_muxer_1212
  surround_encoder_1401
  svf_1214
  tape_delay_1211
  transient_1206
  triple_para_1204
  valve_1209
  valve_rect_1405
  vynil_1905
  wave_terrain_1412
  xfade_1915
  zm1_1428
)

set(SWH_UTILS
  src/util/db.c
  src/util/rms.c
  src/util/blo.c
  src/util/iir.c
  src/util/pitchscale.c
  src/gverb/gverb.c
  src/gverb/gverbdsp.c
  src/gsm/add.c
  src/gsm/code.c
  src/gsm/decode.c
  src/gsm/gsm_create.c
  src/gsm/gsm_decode.c
  src/gsm/gsm_destroy.c
  src/gsm/gsm_encode.c
  src/gsm/gsm_option.c
  src/gsm/long_term.c
  src/gsm/lpc.c
  src/gsm/preprocess.c
  src/gsm/rpe.c
  src/gsm/short_term.c
  src/gsm/table.c
)

foreach(PLUGIN IN LISTS SWH_PLUGINS)
  if (EMSCRIPTEN)
    add_executable(${PLUGIN} src/${PLUGIN}.c  ../include/ladspa_main.c ${SWH_UTILS})
    set_target_properties(${PLUGIN} PROPERTIES SUFFIX ".wasm")
  else()
    add_library(${PLUGIN} SHARED src/${PLUGIN}.c ${SWH_UTILS})
  endif()
  target_link_options(${PLUGIN} PUBLIC -Oz)
  target_link_libraries(${PLUGIN} ${FFTW_LIBRARIES})
endforeach()
